(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>i});var o=t(354),r=t.n(o),a=t(314),c=t.n(a)()(r());c.push([n.id,"body {\n    font-family: 'Courier New', Courier, monospace;\n    background-color: rgb(244, 244, 244);\n    padding: 10px 50px;\n    color: rgb(18, 18, 17);\n}\n\nheader {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 10px;\n}\n\nbutton {\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1rem;\n}\n\n.addBtn {\n    justify-self: end;\n    padding: 10px 30px;\n}\n\n.sidebar-container {\n    display: flex;\n    flex-direction: column;\n    margin-right: 40px;\n    /* background-color: rgb(190, 212, 198); */\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n}\n\n\n.main {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    gap: 10px;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 20px;\n}\n\n.task {\n    /* border: 1px solid #ccc; */\n    padding: 40px;\n    padding-top: 20px;\n}\n\n.card-main {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card-main h3 {\n    cursor: pointer;\n}\n\n.card-main button {\n    /* font-size: .75rem; */\n    max-height: 2rem;\n    padding: 0 .5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.task .hidden {\n    display: none;\n}\n\n.task.expanded .hidden {\n    display: block;\n}\n\n.urgent {\n    background-color: rgb(222, 180, 180);\n}\n\n.high {\n    background-color: rgb(157, 201, 174);\n}\n\n.normal {\n    background-color: rgb(234, 229, 220);\n}\n\n.complete {\n    transition: all 0.25s ease;\n    background-color: rgb(95, 92, 87);\n    color: rgb(159, 156, 150);\n}\n\n.complete button {\n    color: rgb(159, 156, 150);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,8CAA8C;IAC9C,oCAAoC;IACpC,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,8CAA8C;IAC9C,eAAe;AACnB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;;AAGA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;AACb;;AAEA;IACI,aAAa;IACb,kCAAkC;IAClC,SAAS;AACb;;AAEA;IACI,4BAA4B;IAC5B,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,uBAAuB;IACvB,gBAAgB;IAChB,gBAAgB;IAChB,gBAAgB;IAChB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,0BAA0B;IAC1B,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:["body {\n    font-family: 'Courier New', Courier, monospace;\n    background-color: rgb(244, 244, 244);\n    padding: 10px 50px;\n    color: rgb(18, 18, 17);\n}\n\nheader {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 10px;\n}\n\nbutton {\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 1rem;\n}\n\n.addBtn {\n    justify-self: end;\n    padding: 10px 30px;\n}\n\n.sidebar-container {\n    display: flex;\n    flex-direction: column;\n    margin-right: 40px;\n    /* background-color: rgb(190, 212, 198); */\n}\n\n.sidebar {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 20px;\n}\n\n\n.main {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    gap: 10px;\n}\n\n.content {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    gap: 20px;\n}\n\n.task {\n    /* border: 1px solid #ccc; */\n    padding: 40px;\n    padding-top: 20px;\n}\n\n.card-main {\n    display: flex;\n    justify-content: space-between;\n}\n\n.card-main h3 {\n    cursor: pointer;\n}\n\n.card-main button {\n    /* font-size: .75rem; */\n    max-height: 2rem;\n    padding: 0 .5rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n}\n\n.task .hidden {\n    display: none;\n}\n\n.task.expanded .hidden {\n    display: block;\n}\n\n.urgent {\n    background-color: rgb(222, 180, 180);\n}\n\n.high {\n    background-color: rgb(157, 201, 174);\n}\n\n.normal {\n    background-color: rgb(234, 229, 220);\n}\n\n.complete {\n    transition: all 0.25s ease;\n    background-color: rgb(95, 92, 87);\n    color: rgb(159, 156, 150);\n}\n\n.complete button {\n    color: rgb(159, 156, 150);\n}"],sourceRoot:""}]);const i=c},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},c=[],i=0;i<n.length;i++){var s=n[i],d=o.base?s[0]+o.base:s[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=i,e.splice(i,0,{identifier:A,updater:m,references:1})}c.push(A)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<a.length;c++){var i=t(a[c]);e[i].references--}for(var s=o(n,r),d=0;d<a.length;d++){var l=t(a[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),a=t(659),c=t.n(a),i=t(56),s=t.n(i),d=t(540),l=t.n(d),A=t(113),u=t.n(A),p=t(208),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),e()(p.A,m),p.A&&p.A.locals&&p.A.locals;class C{constructor(n,e,t,o,r){this.title=n,this.dueDate=e,this.priorityLevel=t,this.notes=o,this.project=r,this.status=""}completeTask(){this.status="complete";const n=g[this.project],e=n.tasks.indexOf(this),t=n.tasks.splice(e,1)[0];n.tasks.push(t),console.log(n)}}function f(n,e,t,o,r){const a=new C(n,e,t,o,r),c=g[r];return c&&c.tasks.push(a),a}const g={};function h(n){const e={name:n,tasks:[]};return g[n]=e,e}const b=document.querySelector(".content");function y(n){const e=document.createElement("div");e.classList.add("task");const t=document.createElement("div");t.classList.add("card-main");const o=document.createElement("h3");o.textContent=n.title,o.addEventListener("click",(()=>{e.classList.toggle("expanded")})),t.appendChild(o);const r=document.createElement("button");r.textContent="X",r.addEventListener("click",(t=>{!function(n){const e=g[n.project],t=e.tasks.indexOf(n);e.tasks.splice(t,1),console.log(e)}(n),e.remove()})),t.appendChild(r);const a=document.createElement("div");a.textContent=`due date: ${n.dueDate}`;const c=document.createElement("div");c.textContent=`priority level: ${n.priorityLevel}`,c.classList.add("hidden"),e.classList.add(`${n.priorityLevel}`);const i=document.createElement("div");i.textContent=`notes: ${n.notes}`,i.classList.add("hidden");const s=document.createElement("div"),d=document.createElement("input");d.setAttribute("type","checkbox"),s.appendChild(d),d.addEventListener("click",(()=>{n.completeTask(),e.classList.add("complete")})),"complete"===n.status&&(e.classList.add("complete"),d.checked=!0);const l=document.createElement("label");return l.textContent="completed",s.appendChild(l),e.appendChild(t),e.appendChild(a),e.appendChild(c),e.appendChild(i),e.appendChild(s),b.appendChild(e),e}const v=document.querySelector(".content");function B(n){v.innerHTML="",console.log(n),n.tasks.forEach((n=>{y(n)}))}function I(n){v.innerHTML="";for(const e in n)n[e].tasks.forEach((n=>{y(n)}))}document.querySelector(".content");const x=document.querySelector("#project-dialog");function k(n){const e=document.querySelector(".sidebar"),t=document.createElement("button");t.classList.add("project-btn"),t.textContent=`${n}`,e.appendChild(t),t.addEventListener("click",(()=>{B(n=g[t.textContent])}))}function E(n){const e=document.querySelector("#project-dropdown"),t=document.createElement("option");t.textContent=`${n}`,e.appendChild(t)}document.querySelector("#add-project").addEventListener("click",(()=>{x.showModal()})),document.querySelector("#project-submit-btn").addEventListener("click",(n=>{n.preventDefault();const e=document.querySelector("#project-name").value;h(e),k(e),E(e),x.close()}));const S=document.querySelector("#item-dialog");document.querySelector(".addBtn").addEventListener("click",(()=>{S.showModal()})),document.querySelector("#submit-btn").addEventListener("click",(n=>{n.preventDefault();const e=document.querySelector("#task").value,t=document.querySelector("#due-date").value,o=document.querySelector("#level").value,r=document.querySelector("#notes").value,a=document.querySelector("#project-dropdown").value,c=g[a];c&&(f(e,t,o,r,a),B(c)),S.close()})),document.querySelector("#home-btn").addEventListener("click",(()=>{I(g)})),document.querySelector(".content"),h("latte"),k("latte"),E("latte"),f("make matcha","2024-03-25","high","please use a proper matcha whisk :)","latte"),f("add strawberries","2024-03-25","urgent","muddle them","latte"),f("with oat milk please","2024-03-25","normal","that will be an extra $0.75","latte"),f("add BOBA","2024-03-25","high","complete another task to add more boba","latte").completeTask(),f("enjoy your latte :)","2024-03-25","high","thanks!","latte"),h("this.app"),k("this.app"),E("this.app"),f("throw cup away","soon","high","(add remove task functionality)","this.app"),f("write down the recipe","eventually","normal","(incorporate local storage)","this.app"),h("defaultProject"),I(g)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,